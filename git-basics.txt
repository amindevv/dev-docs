In this file I will list some subjects that will be covered about git.

- git init [name of repository]
	git will create a new empty folder initialized for git.

- git init
	Init's a repository using the current directory.

- git status
	Will print the status of the current branch.

- git add [file name]
	Tracks the file.

- git add .
	Add all the files but the deleted files.

- git add -A
	Add all new,modified and deleted files.

- git add -u
	Add all the already tracked files.

- git rm [name of the file]
	Remove a file which is already tracked by git.

- git commit 
	Will open the default text editor to provide the commit message.

- git commit -m [message]
	The commit message will be provided inline.

- git commit -am [message]
	All the files will be added to commit and the message will be inlined.

- git ls-files 
	Lists all the files that git is tracking in the current repository.

- git log
	Log the repository commits.

- git log --abbrev-commit
	Log the repository commits with short commit SHA-1 identifier.

- git log --oneline --graph --decorate
	Log the commits in a more productive fashion with status of the branches.

- git log --since="3 days ago"
	Log the commits since 3 days ago.

- git log -- [file name]
	Log the commits on specific file.

- git log --follow -- [path]
	Log the commits on a specific file including the renames and everything.

- git show [commit id] 
	Shows the details about the commit.

- git reset HEAD [name of the file]
	Will un-stage the reqeuested file.

- git checkout -- [name of the file]
	Removes all the changes.

- git mv [name of the file] [new name]
	Rename the file.
	Difference between git rename command and bash rename is when renamed 
	using git the file will be tracked and the status is "File renamed" but
	when renamed using bash mv status will be [old file name deleted] and
	[new file name] added and it's untracked.

- git mv [name of the file] [directory]
	Moves the file to directory.

* If a file is removes using git rm command the file will be removed totally from the repository and 
If you try to bring it back using git reset HEAD [name of the file] git will only unstage the deletion
of the file.You should git checkout -- [name of the file] to revert changes in the repository.

* Staged changes are ready to be commited but the non staged changes are only present 
  in the working directory and not added to git index.

* Alias:To create an alias use the following syntax.
	git config --global alias.[name of alias] "[git command without the git]"
  to change or edit the alias go to git config file.


